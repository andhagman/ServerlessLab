service: andreas-hagman-serverlesslab

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-west-1
  stage: dev
  package:
    individually: true
  environment:
    UserPoolId: eu-west-1_Cb7f1Pz3K
    UserPoolClientId: 10sfper876k1siihn58apcmbcj
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - cognito-idp:*
      Resource: "*"

plugins:
  - serverless-webpack
  - serverless-offline

functions:
  get-test:
    handler: src/lambdas/http/get-test.handler
    events:
      - http:
          method: GET
          path: test
          authorizer: 
             type: COGNITO_USER_POOLS
             authorizerId: 
               Ref: ApiGatewayAuthorizer
  post-test:
    handler: src/lambdas/http/post-test.handler
    events:
      - http:
          method: POST
          path: test
          authorizer: 
             type: COGNITO_USER_POOLS
             authorizerId: 
               Ref: ApiGatewayAuthorizer
  register:
    handler: src/lambdas/http/autherizer/register.handler
    events:
      - http:
          method: POST
          path: register
  confirm:
    handler: src/lambdas/http/autherizer/confirm.handler
    events:
      - http:
          method: POST
          path: confirm
  auth:
    handler: src/lambdas/http/autherizer/auth.handler
    events:
      - http:
          method: POST
          path: auth
resources:
  Resources:
    ApiGatewayAuthorizer: 
      Type: AWS::ApiGateway::Authorizer
      Properties: 
        Name: CognitoUserPool
        Type: COGNITO_USER_POOLS
        IdentitySource: method.request.header.Authorization
        RestApiId: 
          Ref: ApiGatewayRestApi
        ProviderARNs: 
          - Fn::GetAtt:
              - UserPool
              - Arn

    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ApiGateWayUserPool
        UsernameAttributes: [ email ]
        AutoVerifiedAttributes:
          - email
        MfaConfiguration: "OFF"
        EmailVerificationSubject: "Your Serverless Lab verification code"
        EmailVerificationMessage: "Your Serverless Lab  verification code is {####}."
        Schema:
          - Name: name
            AttributeDataType: String
            Mutable: true
            Required: false
          - Name: email
            AttributeDataType: String
            Mutable: false
            Required: true
        Policies:
          PasswordPolicy:
            RequireLowercase: true
            RequireSymbols: false
            RequireNumbers: true
            MinimumLength: 8
            RequireUppercase: true
        AdminCreateUserConfig:
          InviteMessageTemplate:
            EmailMessage: "Your Serverless Lab  username is {username} and temporary password is {####}."
            EmailSubject: "Your temporary Serverless Lab  password"
          UnusedAccountValidityDays: 7
          AllowAdminCreateUserOnly: false

    UserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ApiGateWayUserPoolClient
        UserPoolId:
          Ref: UserPool
        ExplicitAuthFlows:
          - ADMIN_NO_SRP_AUTH
        GenerateSecret: false
        RefreshTokenValidity: 7

Outputs:
  UserPoolId:
    Value:
      Ref: UserPool

  UserPoolClientId:
    Value:
      Ref: UserPoolClient


